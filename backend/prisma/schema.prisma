// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER") // ADMIN, MANAGER, USER
  isActive  Boolean  @default(true)
  resetToken String?
  resetTokenExpiry DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  timesheets Timesheet[]
  approved_timesheets Timesheet[] @relation("TimesheetApprover")
  projects   Project[] @relation("ProjectManager")

  @@map("users")
}

model Project {
  id          String   @id @default(uuid()) @db.Uuid
  name        String
  description String?
  status      String   @default("ACTIVE") // ACTIVE, COMPLETED, ON_HOLD, CANCELLED
  managerId   String   @db.Uuid
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  manager   User        @relation("ProjectManager", fields: [managerId], references: [id])
  timesheets Timesheet[]

  @@map("projects")
}

model Timesheet {
  id               String    @id @default(uuid()) @db.Uuid
  user_id          String?   @map("user_id") @db.Uuid
  project_id       String?   @map("project_id") @db.Uuid
  work_type        String?   @default("PROJECT") @db.VarChar(20) // PROJECT, NON_PROJECT
  sub_work_type    String?   @default("SOFTWARE") @db.VarChar(20) // SOFTWARE, HARDWARE, MEETING, etc.
  activity         String?   @db.VarChar(100) // Specific activity type
  date             DateTime  @db.Date
  hours_worked     Decimal   @db.Decimal(4, 2)
  overtime_hours   Decimal?  @default(0) @db.Decimal(4, 2)
  description      String
  status           String?   @default("draft") @db.VarChar(20) // draft, submitted, approved, rejected
  submitted_at     DateTime? @db.Timestamp(6)
  approved_by      String?   @map("approved_by") @db.Uuid
  approved_at      DateTime? @map("approved_at") @db.Timestamp(6)
  rejection_reason String?   @map("rejection_reason")
  billable         Boolean?  @default(true)
  hourly_rate      Decimal?  @db.Decimal(10, 2)
  created_at       DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updated_at       DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  approver         User?     @relation("TimesheetApprover", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project          Project?  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             User?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, project_id, date, work_type, sub_work_type])
  @@index([date], map: "idx_timesheets_date_range")
  @@index([project_id], map: "idx_timesheets_project")
  @@index([status], map: "idx_timesheets_status")
  @@index([user_id, date], map: "idx_timesheets_user_date")
  @@map("timesheets")
} 