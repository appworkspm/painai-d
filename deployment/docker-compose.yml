version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: painai-db
    environment:
      POSTGRES_DB: painai
      POSTGRES_USER: painai_user
      POSTGRES_PASSWORD: painai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U painai_user -d painai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PAI-NAI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: painai-app
    environment:
      NODE_ENV: production
      PORT: 8000
      DATABASE_URL: postgresql://painai_user:painai_password@postgres:5432/painai
      JWT_SECRET: e11e22e07ba643828fedd2dd96c3f2a9ea04a63274cade16adfe84d693f298f185597b3d03ec5b50a003c337977dec563407a6da50b7133b1422c30e1e995eaf
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: painai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data: 