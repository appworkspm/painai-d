services:
  - type: web
    name: painai-backend
    env: node
    plan: free
    buildCommand: |
      chmod +x build-frontend.sh
      ./build-frontend.sh
      cd backend && npm install && npx prisma generate && npm run build
    startCommand: cd backend && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: JWT_SECRET
        value: e11e22e07ba643828fedd2dd96c3f2a9ea04a63274cade16adfe84d693f298f185597b3d03ec5b50a003c337977dec563407a6da50b7133b1422c30e1e995eaf
      - key: JWT_EXPIRES_IN
        value: 7d
      - key: CORS_ORIGIN
        value: https://painai.onrender.com
      - key: RATE_LIMIT_WINDOW_MS
        value: 900000
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 1000
      - key: BCRYPT_ROUNDS
        value: 12
      - key: HELMET_ENABLED
        value: true
      - key: LOG_LEVEL
        value: info
      - key: MORGAN_FORMAT
        value: combined
      - key: API_VERSION
        value: v1
      - key: API_PREFIX
        value: /api
      - key: HEALTH_CHECK_ENABLED
        value: true
      - key: METRICS_ENABLED
        value: true
      - key: DATABASE_URL
        value: postgresql://neondb_owner:npg_yTtac2Hm5WRu@ep-billowing-thunder-a1viq4pt-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&connect_timeout=30&pool_timeout=30&idle_timeout=30&max_connections=10
      - key: DIRECT_URL
        value: postgresql://neondb_owner:npg_yTtac2Hm5WRu@ep-billowing-thunder-a1viq4pt.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
    autoDeploy: true 